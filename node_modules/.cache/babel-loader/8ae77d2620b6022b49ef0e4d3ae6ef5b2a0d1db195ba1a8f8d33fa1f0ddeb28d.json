{"ast":null,"code":"import { fetchEpisodes } from \"../services/personaje.services\";\nconst getEpisodes = query => {\n  return {\n    type: \"GET_EPISODES\",\n    query: query\n  };\n};\nconst getEpisodesSuccess = episodios => {\n  return {\n    type: \"GET_EPISODES_SUCCESS\",\n    episodios: episodios\n  };\n};\nconst getEpisodesError = mensaje => {\n  return {\n    type: \"GET_EPISODES_ERROR\",\n    error: mensaje\n  };\n};\nexport const getEpisodesThunk = arrayEpisodeID => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await fetchEpisodes(arrayEpisodeID);\n      if (response !== undefined) {\n        dispatch(getEpisodesSuccess(response));\n      }\n    } catch (e) {\n      dispatch(getEpisodesError(e));\n    }\n  };\n};","map":{"version":3,"names":["fetchEpisodes","getEpisodes","query","type","getEpisodesSuccess","episodios","getEpisodesError","mensaje","error","getEpisodesThunk","arrayEpisodeID","dispatch","getState","response","undefined","e"],"sources":["C:/Users/ALEX/Downloads/ctd-esp-fe1-final-main (2)/ctd-esp-fe1-final-main/src/actions/episodios.actions.ts"],"sourcesContent":["import { Action, ActionCreator, ThunkAction } from \"@reduxjs/toolkit\";\r\nimport { fetchEpisodes } from \"../services/personaje.services\";\r\nimport { RootState } from \"../redux/store\";\r\nimport Episodio from \"../types/episodio.types\";\r\n\r\ninterface getEpisodesAccion extends Action {\r\n  type: \"GET_EPISODES\";\r\n  query: string;\r\n}\r\ninterface getEpisodesSuccessAccion extends Action {\r\n  type: \"GET_EPISODES_SUCCESS\";\r\n  episodios: Episodio | Episodio[];\r\n}\r\ninterface getEpisodesErrorAccion extends Action {\r\n  type: \"GET_EPISODES_ERROR\";\r\n  error: string;\r\n}\r\n\r\nconst getEpisodes: ActionCreator<getEpisodesAccion> = (query: string) => {\r\n  return {\r\n    type: \"GET_EPISODES\",\r\n    query: query,\r\n  };\r\n};\r\n\r\nconst getEpisodesSuccess: ActionCreator<getEpisodesSuccessAccion> = (\r\n  episodios: Episodio | Episodio[]\r\n) => {\r\n  return {\r\n    type: \"GET_EPISODES_SUCCESS\",\r\n    episodios: episodios,\r\n  };\r\n};\r\n\r\nconst getEpisodesError: ActionCreator<getEpisodesErrorAccion> = (\r\n  mensaje: string\r\n) => {\r\n  return {\r\n    type: \"GET_EPISODES_ERROR\",\r\n    error: mensaje,\r\n  };\r\n};\r\n\r\nexport type EpisodesActions =\r\n  | ReturnType<typeof getEpisodes>\r\n  | ReturnType<typeof getEpisodesSuccess>\r\n  | ReturnType<typeof getEpisodesError>;\r\n\r\ninterface FetchEpisodesThunkAction\r\n  extends ThunkAction<void, RootState, unknown, EpisodesActions> {}\r\n\r\n  export const getEpisodesThunk = (\r\n    arrayEpisodeID: (string | undefined)[]\r\n  ): FetchEpisodesThunkAction => {\r\n    return async (dispatch, getState) => {\r\n      try {\r\n        const response = await fetchEpisodes(arrayEpisodeID);\r\n        if (response !== undefined) {\r\n          dispatch(getEpisodesSuccess(response));\r\n        }\r\n      } catch (e) {\r\n        dispatch(getEpisodesError(e));\r\n      }\r\n    };\r\n  };"],"mappings":"AACA,SAASA,aAAa,QAAQ,gCAAgC;AAiB9D,MAAMC,WAA6C,GAAIC,KAAa,IAAK;EACvE,OAAO;IACLC,IAAI,EAAE,cAAc;IACpBD,KAAK,EAAEA;EACT,CAAC;AACH,CAAC;AAED,MAAME,kBAA2D,GAC/DC,SAAgC,IAC7B;EACH,OAAO;IACLF,IAAI,EAAE,sBAAsB;IAC5BE,SAAS,EAAEA;EACb,CAAC;AACH,CAAC;AAED,MAAMC,gBAAuD,GAC3DC,OAAe,IACZ;EACH,OAAO;IACLJ,IAAI,EAAE,oBAAoB;IAC1BK,KAAK,EAAED;EACT,CAAC;AACH,CAAC;AAUC,OAAO,MAAME,gBAAgB,GAC3BC,cAAsC,IACT;EAC7B,OAAO,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,aAAa,CAACU,cAAc,CAAC;MACpD,IAAIG,QAAQ,KAAKC,SAAS,EAAE;QAC1BH,QAAQ,CAACP,kBAAkB,CAACS,QAAQ,CAAC,CAAC;MACxC;IACF,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVJ,QAAQ,CAACL,gBAAgB,CAACS,CAAC,CAAC,CAAC;IAC/B;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}