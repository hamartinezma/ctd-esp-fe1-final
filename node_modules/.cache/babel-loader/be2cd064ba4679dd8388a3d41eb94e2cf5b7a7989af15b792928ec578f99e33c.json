{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALEX\\\\Downloads\\\\ctd-esp-fe1-final-main (2)\\\\ctd-esp-fe1-final-main\\\\src\\\\componentes\\\\personajes\\\\filtros.componente.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch, useSelector as useReduxSelector } from \"react-redux\";\nimport { fetchCharactersThunk } from \"../../actions/personajes.actions\";\nimport \"./filtros.css\";\n\n/**\r\n * Componente que contiene el input de filtro por nombre para buscar personajes.\r\nUtiliza useSelector y useDispatch de react-redux para acceder al estado global y despachar acciones,\r\ncon el objetivo de cambiar la query de búsqueda y mostrar los resultados filtrados.\r\n* @returns Un JSX element con un input y una etiqueta de filtro por nombre.\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filtros = () => {\n  _s();\n  const useSelector = useReduxSelector;\n  const query = useSelector(state => state.personajes.query);\n  const dispatch = useDispatch();\n  const onChange = async e => {\n    let query = e.target.value;\n    dispatch(fetchCharactersThunk(query));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filtros\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nombre\",\n      children: \"Filtrar por nombre:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Rick, Morty, Beth, Alien, ...etc\",\n      name: \"nombre\",\n      onChange: onChange,\n      value: query,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n_s(Filtros, \"ZfBg2dsU/7spMqRGSFxQ37U4C/o=\", true, function () {\n  return [useDispatch];\n});\n_c = Filtros;\nexport default Filtros;\nvar _c;\n$RefreshReg$(_c, \"Filtros\");","map":{"version":3,"names":["React","useDispatch","useSelector","useReduxSelector","fetchCharactersThunk","jsxDEV","_jsxDEV","Filtros","_s","query","state","personajes","dispatch","onChange","e","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/ALEX/Downloads/ctd-esp-fe1-final-main (2)/ctd-esp-fe1-final-main/src/componentes/personajes/filtros.componente.tsx"],"sourcesContent":["import React, { ChangeEvent } from \"react\";\r\nimport {\r\n    TypedUseSelectorHook,\r\n    useDispatch,\r\n    useSelector as useReduxSelector,\r\n} from \"react-redux\";\r\nimport { fetchCharactersThunk } from \"../../actions/personajes.actions\";\r\nimport { AppDispatch, RootState } from \"../../redux/store\";\r\nimport \"./filtros.css\";\r\n\r\n/**\r\n * Componente que contiene el input de filtro por nombre para buscar personajes.\r\nUtiliza useSelector y useDispatch de react-redux para acceder al estado global y despachar acciones,\r\ncon el objetivo de cambiar la query de búsqueda y mostrar los resultados filtrados.\r\n* @returns Un JSX element con un input y una etiqueta de filtro por nombre.\r\n*/\r\n\r\nconst Filtros = () => {\r\n\r\n    const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\n    const query = useSelector((state) => state.personajes.query);\r\n    const dispatch = useDispatch<AppDispatch>();\r\n\r\n    const onChange = async (e: ChangeEvent<HTMLInputElement>) => {\r\n        let query = e.target.value;\r\n        dispatch(fetchCharactersThunk(query));\r\n    };\r\n\r\n\r\n    return <div className=\"filtros\">\r\n        <label htmlFor=\"nombre\">Filtrar por nombre:</label>\r\n        <input type=\"text\" placeholder=\"Rick, Morty, Beth, Alien, ...etc\" name=\"nombre\" onChange={onChange}\r\n            value={query}\r\n            autoFocus={true} />\r\n    </div>\r\n}\r\n\r\nexport default Filtros;"],"mappings":";;AAAA,OAAOA,KAAK,MAAuB,OAAO;AAC1C,SAEIC,WAAW,EACXC,WAAW,IAAIC,gBAAgB,QAC5B,aAAa;AACpB,SAASC,oBAAoB,QAAQ,kCAAkC;AAEvE,OAAO,eAAe;;AAEtB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAMN,WAA4C,GAAGC,gBAAgB;EACrE,MAAMM,KAAK,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACF,KAAK,CAAC;EAC5D,MAAMG,QAAQ,GAAGX,WAAW,EAAe;EAE3C,MAAMY,QAAQ,GAAG,MAAOC,CAAgC,IAAK;IACzD,IAAIL,KAAK,GAAGK,CAAC,CAACC,MAAM,CAACC,KAAK;IAC1BJ,QAAQ,CAACR,oBAAoB,CAACK,KAAK,CAAC,CAAC;EACzC,CAAC;EAGD,oBAAOH,OAAA;IAAKW,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAC3BZ,OAAA;MAAOa,OAAO,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACnDjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,kCAAkC;MAACC,IAAI,EAAC,QAAQ;MAACb,QAAQ,EAAEA,QAAS;MAC/FG,KAAK,EAAEP,KAAM;MACbkB,SAAS,EAAE;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AACV,CAAC;AAAAf,EAAA,CAlBKD,OAAO;EAAA,QAIQN,WAAW;AAAA;AAAA2B,EAAA,GAJ1BrB,OAAO;AAoBb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}