{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport thunkMiddleware from 'redux-thunk';\nimport personajesReducer from \"../reducers/personaje.reducer\";\nimport favsReducer from \"../reducers/favs.reducer\";\nimport episodioReducer from \"../reducers/episodios.reducer\";\n\n/**\r\n * @author: alexander martinez\r\n */ // Define la interfaz para el estado global de la aplicación\nconst rootReducer = combineReducers({\n  personajes: personajesReducer,\n  favs: favsReducer,\n  episodios: episodioReducer\n});\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunkMiddleware)\n});\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","thunkMiddleware","personajesReducer","favsReducer","episodioReducer","rootReducer","personajes","favs","episodios","store","reducer","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/ALEX/Downloads/ctd-esp-fe1-final-main (2)/ctd-esp-fe1-final-main/src/redux/store.ts"],"sourcesContent":["import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport personajesReducer from \"../reducers/personaje.reducer\";\r\nimport favsReducer from \"../reducers/favs.reducer\";\r\nimport episodioReducer from \"../reducers/episodios.reducer\"\r\nimport Personaje from '../types/personaje.types';\r\n\r\n/**\r\n * @author: alexander martinez\r\n */\r\n\r\n// Define la interfaz para el estado global de la aplicación\r\nexport interface AppState {\r\n  personajes: {\r\n    personajeSeleccionado: Personaje;\r\n  };\r\n  // otros reducers aquí\r\n}\r\n\r\nexport interface PersonajesState {\r\n  personajes: Personaje[];\r\n  personajeSeleccionado: Personaje | null;\r\n  status: \"IDLE\" | \"LOADING\" | \"SUCCEEDED\" | \"FAILED\";\r\n  error: string | null;\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  personajes: personajesReducer,\r\n  favs: favsReducer,\r\n  episodios: episodioReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunkMiddleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,eAAe,MAAM,aAAa;AACzC,OAAOC,iBAAiB,MAAM,+BAA+B;AAC7D,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,eAAe,MAAM,+BAA+B;;AAG3D;AACA;AACA,GAFA,CAIA;AAeA,MAAMC,WAAW,GAAGN,eAAe,CAAC;EAClCO,UAAU,EAAEJ,iBAAiB;EAC7BK,IAAI,EAAEJ,WAAW;EACjBK,SAAS,EAAEJ;AACb,CAAC,CAAC;AAEF,OAAO,MAAMK,KAAK,GAAGT,cAAc,CAAC;EAClCU,OAAO,EAAEL,WAAW;EACpBM,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,EAAE,CAACC,MAAM,CAACZ,eAAe;AACrF,CAAC,CAAC;AAKF,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}