{"ast":null,"code":"import { fetchEpisodes } from \"../services/personaje.services\";\nexport const FETCH_EPISODES_REQUEST = \"FETCH_EPISODES_REQUEST\";\nexport const FETCH_EPISODES_SUCCESS = \"FETCH_EPISODES_SUCCESS\";\nexport const FETCH_EPISODES_FAILURE = \"FETCH_EPISODES_FAILURE\";\nexport const fetchEpisodesRequest = () => {\n  return {\n    type: FETCH_EPISODES_REQUEST\n  };\n};\nexport const fetchEpisodesSuccess = episodios => {\n  return {\n    type: FETCH_EPISODES_SUCCESS,\n    payload: episodios\n  };\n};\nexport const fetchEpisodesFailure = error => {\n  return {\n    type: FETCH_EPISODES_FAILURE,\n    payload: error\n  };\n};\nexport const getEpisodesThunk = arrayEpisodeID => {\n  return async dispatch => {\n    dispatch(fetchEpisodesRequest());\n    try {\n      const response = await fetchEpisodes(arrayEpisodeID);\n      const data = await response.json();\n      dispatch(fetchEpisodesSuccess(data));\n    } catch (error) {\n      dispatch(fetchEpisodesFailure(error));\n    }\n  };\n};","map":{"version":3,"names":["fetchEpisodes","FETCH_EPISODES_REQUEST","FETCH_EPISODES_SUCCESS","FETCH_EPISODES_FAILURE","fetchEpisodesRequest","type","fetchEpisodesSuccess","episodios","payload","fetchEpisodesFailure","error","getEpisodesThunk","arrayEpisodeID","dispatch","response","data","json"],"sources":["C:/Users/ALEX/Downloads/ctd-esp-fe1-final-main (2)/ctd-esp-fe1-final-main/src/actions/episodios.actions.ts"],"sourcesContent":["import { ThunkAction } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { fetchEpisodes } from \"../services/personaje.services\";\r\n\r\nexport const FETCH_EPISODES_REQUEST = \"FETCH_EPISODES_REQUEST\";\r\nexport const FETCH_EPISODES_SUCCESS = \"FETCH_EPISODES_SUCCESS\";\r\nexport const FETCH_EPISODES_FAILURE = \"FETCH_EPISODES_FAILURE\";\r\n\r\nexport type FetchEpisodesThunkAction = ThunkAction<\r\n  void,\r\n  RootState,\r\n  unknown,\r\n  AnyAction\r\n>;\r\n\r\nexport const fetchEpisodesRequest = () => {\r\n  return {\r\n    type: FETCH_EPISODES_REQUEST,\r\n  };\r\n};\r\n\r\nexport const fetchEpisodesSuccess = (episodios: any) => {\r\n  return {\r\n    type: FETCH_EPISODES_SUCCESS,\r\n    payload: episodios,\r\n  };\r\n};\r\n\r\nexport const fetchEpisodesFailure = (error: any) => {\r\n  return {\r\n    type: FETCH_EPISODES_FAILURE,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const getEpisodesThunk = (\r\n  arrayEpisodeID: (string | undefined)[]\r\n): FetchEpisodesThunkAction => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchEpisodesRequest());\r\n    try {\r\n      const response = await fetchEpisodes(arrayEpisodeID);\r\n      const data = await response.json();\r\n      dispatch(fetchEpisodesSuccess(data));\r\n    } catch (error) {\r\n      dispatch(fetchEpisodesFailure(error));\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAGA,SAASA,aAAa,QAAQ,gCAAgC;AAE9D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAC9D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAC9D,OAAO,MAAMC,sBAAsB,GAAG,wBAAwB;AAS9D,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACxC,OAAO;IACLC,IAAI,EAAEJ;EACR,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,oBAAoB,GAAIC,SAAc,IAAK;EACtD,OAAO;IACLF,IAAI,EAAEH,sBAAsB;IAC5BM,OAAO,EAAED;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAME,oBAAoB,GAAIC,KAAU,IAAK;EAClD,OAAO;IACLL,IAAI,EAAEF,sBAAsB;IAC5BK,OAAO,EAAEE;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAC3BC,cAAsC,IACT;EAC7B,OAAO,MAAOC,QAAQ,IAAK;IACzBA,QAAQ,CAACT,oBAAoB,EAAE,CAAC;IAChC,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMd,aAAa,CAACY,cAAc,CAAC;MACpD,MAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,EAAE;MAClCH,QAAQ,CAACP,oBAAoB,CAACS,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdG,QAAQ,CAACJ,oBAAoB,CAACC,KAAK,CAAC,CAAC;IACvC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}