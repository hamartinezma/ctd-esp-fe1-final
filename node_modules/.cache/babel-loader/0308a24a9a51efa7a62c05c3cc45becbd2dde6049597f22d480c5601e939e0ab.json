{"ast":null,"code":"import { getCharactersAPI, changePage } from \"../services/personaje.services\";\nexport const SET_LAST_VISITED = 'SET_LAST_VISITED';\nexport const setLastVisited = lastVisited => {\n  return {\n    type: SET_LAST_VISITED,\n    payload: lastVisited\n  };\n};\nconst getCharacters = query => {\n  return {\n    type: \"GET_CHARACTERS\",\n    query: query\n  };\n};\nconst getCharactersSuccess = (personajes, pageInfo) => {\n  return {\n    type: \"GET_CHARACTERS_SUCCESS\",\n    personajes: personajes,\n    pageInfo: pageInfo\n  };\n};\nconst getCharactersError = mensaje => {\n  return {\n    type: \"GET_CHARACTERS_ERROR\",\n    error: mensaje\n  };\n};\nexport const fetchCharactersThunk = query => {\n  return async (dispatch, getState) => {\n    dispatch(getCharacters(query));\n    try {\n      const response = await getCharactersAPI(query);\n      const [personajes, info, status] = response;\n      if (status === 200) {\n        dispatch(getCharactersSuccess(personajes, info));\n      } else {\n        dispatch(getCharactersError(status));\n      }\n    } catch (e) {\n      dispatch(getCharactersError(e));\n    }\n  };\n};\nexport const changePageThunk = url => {\n  return async (dispatch, getState) => {\n    try {\n      const [personajes, info] = await changePage(url);\n      dispatch(getCharactersSuccess(personajes, info));\n    } catch (e) {\n      dispatch(getCharactersError(e));\n    }\n  };\n};","map":{"version":3,"names":["getCharactersAPI","changePage","SET_LAST_VISITED","setLastVisited","lastVisited","type","payload","getCharacters","query","getCharactersSuccess","personajes","pageInfo","getCharactersError","mensaje","error","fetchCharactersThunk","dispatch","getState","response","info","status","e","changePageThunk","url"],"sources":["C:/Users/ALEX/Downloads/ctd-esp-fe1-final-main (2)/ctd-esp-fe1-final-main/src/actions/personajes.actions.ts"],"sourcesContent":["import { Action, ActionCreator, ThunkAction } from '@reduxjs/toolkit'\r\nimport { getCharactersAPI, changePage } from \"../services/personaje.services\";\r\nimport { RootState } from \"../redux/store\";\r\nimport Page from \"../types/page.types\";\r\nimport Personaje from \"../types/personaje.types\";\r\n\r\nexport const SET_LAST_VISITED = 'SET_LAST_VISITED';\r\n\r\ninterface SetLastVisitedAction extends Action {\r\n  type: typeof SET_LAST_VISITED;\r\n  payload: string;\r\n}\r\n\r\nexport type ActionTypes = SetLastVisitedAction;\r\n\r\nexport const setLastVisited = (lastVisited: string) => {\r\n  return {\r\n    type: SET_LAST_VISITED,\r\n    payload: lastVisited\r\n  };\r\n};\r\n\r\ninterface getCharactersAccion extends Action {\r\n  type: \"GET_CHARACTERS\";\r\n  query: string;\r\n}\r\ninterface getCharactersSuccessAccion extends Action {\r\n  type: \"GET_CHARACTERS_SUCCESS\";\r\n  personajes: Personaje[];\r\n  pageInfo: Page;\r\n}\r\ninterface getCharactersErrorAccion extends Action {\r\n  type: \"GET_CHARACTERS_ERROR\";\r\n  error: string | number;\r\n}\r\n\r\nconst getCharacters: ActionCreator<getCharactersAccion> = (query: string) => {\r\n  return {\r\n    type: \"GET_CHARACTERS\",\r\n    query: query,\r\n  };\r\n};\r\n\r\nconst getCharactersSuccess: ActionCreator<getCharactersSuccessAccion> = (\r\n  personajes: Personaje[],\r\n  pageInfo: Page\r\n) => {\r\n  return {\r\n    type: \"GET_CHARACTERS_SUCCESS\",\r\n    personajes: personajes,\r\n    pageInfo: pageInfo,\r\n  };\r\n};\r\n\r\nconst getCharactersError: ActionCreator<getCharactersErrorAccion> = (\r\n  mensaje: string | number\r\n) => {\r\n  return {\r\n    type: \"GET_CHARACTERS_ERROR\",\r\n    error: mensaje,\r\n  };\r\n};\r\n\r\nexport type CharacterActions =\r\n  | ReturnType<typeof getCharacters>\r\n  | ReturnType<typeof getCharactersSuccess>\r\n  | ReturnType<typeof getCharactersError>;\r\n\r\ninterface FetchCharactersThunkAction\r\n  extends ThunkAction<void, RootState, unknown, CharacterActions> {}\r\n\r\n\r\n\r\n  \r\nexport const fetchCharactersThunk = (\r\n  query: string\r\n): FetchCharactersThunkAction => {\r\n  return async (dispatch, getState) => {\r\n    dispatch(getCharacters(query));\r\n    try {\r\n      const response = await getCharactersAPI(query);\r\n      const [personajes, info, status] = response;\r\n      if (status === 200) {\r\n        dispatch(getCharactersSuccess(personajes, info));\r\n      } else {\r\n        dispatch(getCharactersError(status));\r\n      }\r\n    } catch (e) {\r\n      dispatch(getCharactersError(e));\r\n    }\r\n  };\r\n};\r\n\r\nexport const changePageThunk = (url: string): FetchCharactersThunkAction => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const [personajes, info] = await changePage(url);\r\n      dispatch(getCharactersSuccess(personajes, info));\r\n    } catch (e) {\r\n      dispatch(getCharactersError(e));\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AACA,SAASA,gBAAgB,EAAEC,UAAU,QAAQ,gCAAgC;AAK7E,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AASlD,OAAO,MAAMC,cAAc,GAAIC,WAAmB,IAAK;EACrD,OAAO;IACLC,IAAI,EAAEH,gBAAgB;IACtBI,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAgBD,MAAMG,aAAiD,GAAIC,KAAa,IAAK;EAC3E,OAAO;IACLH,IAAI,EAAE,gBAAgB;IACtBG,KAAK,EAAEA;EACT,CAAC;AACH,CAAC;AAED,MAAMC,oBAA+D,GAAGA,CACtEC,UAAuB,EACvBC,QAAc,KACX;EACH,OAAO;IACLN,IAAI,EAAE,wBAAwB;IAC9BK,UAAU,EAAEA,UAAU;IACtBC,QAAQ,EAAEA;EACZ,CAAC;AACH,CAAC;AAED,MAAMC,kBAA2D,GAC/DC,OAAwB,IACrB;EACH,OAAO;IACLR,IAAI,EAAE,sBAAsB;IAC5BS,KAAK,EAAED;EACT,CAAC;AACH,CAAC;AAaD,OAAO,MAAME,oBAAoB,GAC/BP,KAAa,IACkB;EAC/B,OAAO,OAAOQ,QAAQ,EAAEC,QAAQ,KAAK;IACnCD,QAAQ,CAACT,aAAa,CAACC,KAAK,CAAC,CAAC;IAC9B,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMlB,gBAAgB,CAACQ,KAAK,CAAC;MAC9C,MAAM,CAACE,UAAU,EAAES,IAAI,EAAEC,MAAM,CAAC,GAAGF,QAAQ;MAC3C,IAAIE,MAAM,KAAK,GAAG,EAAE;QAClBJ,QAAQ,CAACP,oBAAoB,CAACC,UAAU,EAAES,IAAI,CAAC,CAAC;MAClD,CAAC,MAAM;QACLH,QAAQ,CAACJ,kBAAkB,CAACQ,MAAM,CAAC,CAAC;MACtC;IACF,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVL,QAAQ,CAACJ,kBAAkB,CAACS,CAAC,CAAC,CAAC;IACjC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,GAAW,IAAiC;EAC1E,OAAO,OAAOP,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAM,CAACP,UAAU,EAAES,IAAI,CAAC,GAAG,MAAMlB,UAAU,CAACsB,GAAG,CAAC;MAChDP,QAAQ,CAACP,oBAAoB,CAACC,UAAU,EAAES,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVL,QAAQ,CAACJ,kBAAkB,CAACS,CAAC,CAAC,CAAC;IACjC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}